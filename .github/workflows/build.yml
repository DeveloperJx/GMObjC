# 当提交 tag 时，运行单元测试，并提交测试覆盖率

name: build

on:
  push:
    tags:
      - 4.*

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      # 第一步，获取源码，将代码检出到虚拟机上
      - name: Checkout
        uses: actions/checkout@v4
      # 第二步，安装所需环境
      - name: Install
        run: |
          env
          locale
          gem install cocoapods --no-document --quiet
          gem install xcpretty --no-document --quiet
          pod --version
          pod repo update --silent
          xcpretty --version
          xcodebuild -version
          xcodebuild -showsdks
      # 第三步，编译测试
      - name: Build and Tests
        run: |
          set -o pipefail
          echo Check if the library described by the podspec can be built
          pod lib lint --use-libraries --allow-warnings --skip-tests
          echo Build as frameworks
          xcodebuild build -project GMObjC.xcodeproj -scheme 'GMObjC' -sdk iphonesimulator PLATFORM_NAME=iphonesimulator -configuration Debug | xcpretty -c
          echo Build the Demo apps
          pod install
          xcodebuild build -workspace GMObjC.xcworkspace -scheme 'GMObjC iOS Demo' -destination 'platform=iOS Simulator,name=iPhone 15' -configuration Debug CODE_SIGNING_ALLOWED=NO | xcpretty -c
          echo Clean DerivedData
          rm -rf ~/Library/Developer/Xcode/DerivedData/
          echo Run the tests
          xcodebuild test -workspace GMObjC.xcworkspace -scheme 'Tests Host' -destination 'platform=iOS Simulator,name=iPhone 15' -configuration Debug CODE_SIGNING_ALLOWED=NO -enableCodeCoverage YES | xcpretty -c

      # 第四步，通知codecov
      - name: Notify codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -G "./GMObjC" -t ${{ secrets.CODECOV_TOKEN }}
